# ------------------------------------------------------------------------------------------------
# Package Persone - work - Ver. 1.1
# Descrizione: notifiche quando entriamo o usciamo dal lavoro
# ------------------------------------------------------------------------------------------------
# Autore: Henrik Sozzi
# sito: https://henriksozzi.it
# ------------------------------------------------------------------------------------------------
# CHANGELOG
# Ver. 1.0 - 05/05/2021
#   - Miglioramenti per pubblicazione
# Ver. 1.1 - 10/11/2023
#   - Aggiunti valori di default a conversioni int(0)
#   - Migliorie stilistiche e usati trigger più compatti
# ------------------------------------------------------------------------------------------------
# Distribuito con licenza: CC BY-NC-SA 4.0
# Formato leggibile da un essere umano: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.it
# Formato per gli avvocati: https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
# ------------------------------------------------------------------------------------------------
input_boolean:
  notifiche_lavoro:
    name: Notifiche and/rit lavoro
    icon: mdi:briefcase-outline
  henrik_ritorno_a_pranzo:
    name: Henrik ritorna a casa a pranzo
    icon: mdi:pasta

automation:
  # Arrivo al lavoro / rientro dal lavoro
  - id: 49f72ed4-1b6c-4729-baf9-edaa86fd072f
    alias: "Persone - Notifica - Henrik ritorna dal lavoro"
    description: "Quando Henrik esce dalla zona lavoro dopo le ore 19:00 annuncia il ritorno a casa con Alexa"
    trigger:
      - entity_id: person.henrik_sozzi
        from: ufficio
        platform: state
    condition:
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.persone_notifica_henrik_ritorna_dal_lavoro', 'last_triggered') | default(0)) | int(0) > 1800)}}"
      - condition: state
        entity_id: input_boolean.notifiche_lavoro
        state: "on"
      - condition: or
        conditions:
          - condition: time
            after: "19:00:00"
            before: "22:00:00"
            weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.henrik_ritorno_a_pranzo
                state: "on"
              - condition: time
                after: "11:40:00"
                before: "14:00:00"
                weekday:
                  - mon
                  - tue
                  - wed
                  - thu
                  - fri
    action:
      - service: script.multinotify
        data:
          title: "Henrik sta tornando"
          message: "Henrik sta tornando dall'ufficio!"
          alexa_message: '<say-as interpret-as="interjection">yippii</say-as>. Papà sta tornando dall ufficio!'
          alexa_target: media_player.ovunque
          notify_app: notify.all_android_devices
          channel: people-fromwork
          group: people
          tag: "{{trigger.to_state.name}} home"

  - id: 489203b7-4720-4e73-8801-e130c889dfe9
    alias: "Persone - Notifica - Antonella esce dal negozio"
    description: "Avvisa tramite Alexa quando Anto esce dal negozio"
    trigger:
      - entity_id: person.antonella
        from: negozio
        platform: state
    condition:
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.persone_notifica_antonella_arriva_in_negozio', 'last_triggered') | default(0)) | int(0) > 1800)}}"
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.persone_notifica_antonella_esce_dal_negozio', 'last_triggered') | default(0)) | int(0) > 1800)}}"
      - condition: state
        entity_id: input_boolean.notifiche_lavoro
        state: "on"
    action:
      - service: script.multinotify
        data:
          title: Antonella sta tornando
          message: Antonella è uscita dal negozio!
          alexa_message: '<say-as interpret-as="interjection">yippii</say-as>. La mamma è uscita dal negozio!'
          alexa_target: media_player.ovunque
          notify_app: notify.all_android_devices
          channel: people-fromwork
          group: people
          tag: "{{trigger.to_state.name}} home"

  - id: bd9bb359-7a76-447f-8ef9-d625b1a59b48
    alias: "Persone - Notifica - Antonella arriva in negozio"
    description: "Avvisa tramite Alexa quando Anto arriva in negozio"
    trigger:
      - entity_id: person.antonella
        platform: state
        to: negozio
    condition:
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.persone_notifica_antonella_arriva_in_negozio', 'last_triggered') | default(0)) | int(0) > 1800)}}"
      - condition: template
        value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.persone_notifica_antonella_esce_dal_negozio', 'last_triggered') | default(0)) | int(0) > 1800)}}"
      - condition: state
        entity_id: input_boolean.notifiche_lavoro
        state: "on"
    action:
      - service: script.multinotify
        data:
          title: Antonella è in negozio
          message: Antonella è arrivata in negozio!
          alexa_message: '<say-as interpret-as="interjection">din don</say-as>. La mamma è arrivata in negozio!'
          alexa_target: media_player.ovunque
          notify_app: notify.all_android_devices
          channel: people-towork
          group: people
          tag: "{{trigger.to_state.name}} home"

  # Qualcuno arriva a casa o parte da casa
  - id: 0bb4febe-f9b1-445c-9b27-ac9793c4a617
    alias: "Persone - Notifica - Qualcuno arriva o parte da casa"
    trigger:
      # To: home
      - platform: state
        entity_id:
          - binary_sensor.henrik_at_home
          - binary_sensor.antonella_at_home
          - binary_sensor.erica_at_home
        to:
          - "on"
          - "off"
        not_from:
          - "unknown"
          - "unavailable"
      - platform: state
        entity_id:
          - person.nonno
          - person.nonna
          - person.zia
          - person.cognato
          - person.suocera
        to:
          - "home"
          - "not_home"
        not_from:
          - "unknown"
          - "unavailable"
    variables:
      name: "{{ trigger.to_state.name if trigger.to_state.domain == 'person' else trigger.to_state.attributes.name }}"
      home: "{{ trigger.to_state.state == 'home' if trigger.to_state.domain == 'person' else trigger.to_state.state == 'on' }}"
    action:
      - service: script.multinotify
        data:
          notify_app: notify.mobile_app_tel_henrik
          title: >
            {% if home %}
              {{name}} è a casa
            {% else %}
              {{name}} non è più a casa
            {% endif %}
          message: >
            {% if home %}
              {{name}} è ora entrato/a a casa
            {% else %}
              {{name}} è ora uscito/a da casa
            {% endif %}
          channel: >
            {% if home %}
              people-tohome
            {% else %}
              people-fromhome
            {% endif %}
          group: people
          tag: "{{name}} home"
