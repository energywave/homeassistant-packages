# -----------------------------------------------------------------------------------------------
# Package Persone - auto_detect - Ver. 2.2
# Descrizione: gestione presenza/assenza in modo sicuro e generazione eventi specifici
# -----------------------------------------------------------------------------------------------
# Autore: Henrik Sozzi
# sito: https://henriksozzi.it
# -----------------------------------------------------------------------------------------------
# CHANGELOG
# Ver. 1.0 - 05/05/2021
#   - Miglioramenti per pubblicazione
# Ver. 2.0 - 11/11/2021
#   - Ottimizzazioni e snellimento gestione, fidandosi di più dei meccanismi di Home Assistant
# Ver. 2.1 - 16/11/2021
#   - Ci affidiamo completamente all'oggetto person. Si è rivelato affidabile
#   - Aggiunti switch high accuracy GPS
#   - Aggiunti sensori source, per verificare cosa è stato usato nel tempo per determinare la pos
# Ver. 2.2 - 27/04/2023
#   - Aggiunti nuovamente binary_sensor per lo stato di presenza di ogni persona: evitiamo bounce.
#   - Sostituito group.anyone_at_home con binary_sensor.anyone_at_home
#   - Aggiunti stati di letto occupato (con quel che ho). In futuro questi sensori potranno essere
#     alimentati con dispositivi appositi.
#   - Nuova sintassi per posizione GPS HQ
# -----------------------------------------------------------------------------------------------
# Distribuito con licenza: CC BY-NC-SA 4.0
# Formato leggibile da un essere umano: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.it
# Formato per gli avvocati: https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
# -----------------------------------------------------------------------------------------------

input_boolean:
  primo_sceso_scale_today:
    name: La prima persona è scesa dalle scale oggi?

input_number:
  sleep_confidence_threshold:
    name: Soglia confidenza sonno
    min: 0
    max: 100
    step: 1

template:
  # Occupazione pian terreno
  - binary_sensor:
      - name: "Occupazione pian terreno"
        state: >
          {{ is_state('binary_sensor.motion_soggiorno_occupancy', 'on') or is_state('binary_sensor.motion_cucina_occupancy', 'on') }}
        delay_off:
          minutes: 10
        device_class: occupancy
        unique_id: "pian_terreno_occupancy"

  # Presenza in casa di Henrik. Viene data priorità a qualunque sensore indichi una presenza in casa con tempo minimo di fuori casa di 5 minuti per evitare false uscite
  - binary_sensor:
      - name: "Henrik a casa?"
        # state: "{{ is_state('person.henrik_sozzi', 'home')}}"
        state: "{{ is_state('device_tracker.hsphone', 'home') or is_state('device_tracker.tel_henrik', 'home') or is_state('device_tracker.tel_henrik_wifi', 'home') }}"
        delay_off:
          minutes: 5
        picture: "/local/henrik{% if not(is_state('binary_sensor.henrik_at_home', 'on')) %}_off{% endif %}.jpg"
        device_class: presence
        unique_id: "henrik_at_home"
        attributes:
          name: Henrik
  # Presenza in casa di Antonella. Viene data priorità a qualunque sensore indichi una presenza in casa con tempo minimo di fuori casa di 5 minuti per evitare false uscite
  - binary_sensor:
      - name: "Antonella a casa?"
        # state: "{{ is_state('person.antonella_galeoto', 'home') }}"
        state: "{{ is_state('device_tracker.telantorealme', 'home') or is_state('device_tracker.smartphone_antonella', 'home') or is_state('device_tracker.tel_anto_wifi', 'home') }}"
        delay_off:
          minutes: 5
        picture: "/local/antonella{% if not(is_state('binary_sensor.antonella_at_home', 'on')) %}_off{% endif %}.jpg"
        device_class: presence
        unique_id: "antonella_at_home"
        attributes:
          name: Antonella
  - binary_sensor:
      - name: "Erica a casa?"
        # state: "{{ is_state('person.erica', 'home') }}"
        state: "{{ is_state('device_tracker.iphone_di_erica_router', 'home') or is_state('device_tracker.iphone_di_erica', 'home') or is_state('device_tracker.iphone_ssid', 'home') }}"
        delay_off:
          minutes: 5
        picture: "/local/erica{% if not(is_state('binary_sensor.erica_at_home', 'on')) %}_off{% endif %}.jpg"
        device_class: presence
        unique_id: "erica_at_home"
        attributes:
          name: Erica
  - binary_sensor:
      - name: "Ankie a casa?"
        state: "{{is_state('person.ankie_westberg', 'home')}}"
        delay_off:
          minutes: 5
        picture: "/local/ankie{% if not(is_state('binary_sensor.ankie_at_home', 'on')) %}_off{% endif %}.jpg"
        device_class: presence
        unique_id: "ankie_at_home"
        attributes:
          name: Ankie

  - sensor:
      # Sensori person_NAME_source che deterinano nel tempo quale sorgente viene usata dall'oggetto person per determinare la posizione
      - name: Person Henrik Source
        unique_id: 8693c26f-d00d-493b-b129-f79a03d97deb
        state: "{{ state_attr('person.henrik_sozzi', 'source')[15:] }}"
  - sensor:
      - name: Person Antonella Source
        unique_id: fea33faf-cebd-4f2e-a839-96dc2db74a19
        state: "{{ state_attr('person.antonella_galeoto', 'source')[15:] }}"
  - sensor:
      - name: Person Erica Source
        unique_id: 2fd8669e-6e8a-4cf2-9dde-3a2e3011fa68
        state: "{{ state_attr('person.erica', 'source')[15:] }}"
  - binary_sensor:
      - name: Letto camera occupato
        unique_id: d2da4e2f-b674-475f-aa7a-713bf4a126a9
        state: "{{ is_state('binary_sensor.letto_antonella_occupato', 'on') or is_state('binary_sensor.letto_henrik_occupato', 'on') }}"
  - binary_sensor:
      - name: Letto Antonella occupato
        unique_id: 90e189c1-dbb9-4c83-b025-dd8022a67f26
        state: >
          {{ (not (10,0) < (now().hour, now().minute) < (22,0)) and 
          is_state('binary_sensor.antonella_at_home', 'on') and
          (states('sensor.smartphone_antonella_sleep_confidence')|int(0) > states('input_number.sleep_confidence_threshold') | int(50) or
          is_state('binary_sensor.smartphone_antonella_is_charging', 'on')) }}
  - binary_sensor:
      - name: Letto Henrik occupato
        unique_id: aa5c078a-ffda-4d2e-a422-0a0d13972a0f
        state: >
          {{ (not (11,30) < (now().hour, now().minute) < (23,0)) and 
          is_state('binary_sensor.henrik_at_home', 'on') and
          (states('sensor.tel_henrik_sleep_confidence')|int(0) > states('input_number.sleep_confidence_threshold') | int(50) or
          is_state('binary_sensor.tel_henrik_e_in_carica', 'on')) }}
  - binary_sensor:
      # TODO: Sto usando solo l'orario. Migliorare se possibile
      - name: Letto Ilaria occupato
        unique_id: 31507dc2-76dc-4c34-9941-3755077ce3bb
        state: >
          {{ (not (7,00) < (now().hour, now().minute) < (22,0)) }}
  - binary_sensor:
      - name: Letto Erica occupato
        unique_id: 774b3779-a3e8-4587-8edd-eb86f5b92811
        state: >
          {{ (not (7,00) < (now().hour, now().minute) < (22,0)) and 
          is_state('binary_sensor.erica_at_home', 'on') and
          (is_state('sensor.iphone_activity', 'Stationary') or is_state('sensor.iphone_battery_state', 'Charging')) }}

switch:
  - platform: template
    switches:
      # Swtich tel_NOME_hq_gps per rilevare e modificare lo stato di alta qualità nella rilevazione della posizione dei telefoni
      tel_henrik_hq_gps:
        friendly_name: Tel Henrik HQ GPS
        unique_id: e67c8229-65f9-40b1-9f6c-c8c983ccb69d
        value_template: "{{ is_state('binary_sensor.tel_henrik_high_accuracy_mode', 'on') }}"
        availability_template: "{{ states.binary_sensor.tel_henrik_high_accuracy_mode.state is defined }}"
        turn_on:
          service: notify.mobile_app_tel_henrik
          data:
            message: "command_high_accuracy_mode"
            data:
              command: "turn_on"
        turn_off:
          service: notify.mobile_app_tel_henrik
          data:
            message: "command_high_accuracy_mode"
            data:
              command: "turn_off"
      tel_anto_hq_gps:
        friendly_name: Tel Antonella HQ GPS
        unique_id: 55edc1de-f870-4f69-977a-6eb8018a8f83
        value_template: "{{ is_state('binary_sensor.smartphone_antonella_high_accuracy_mode', 'on') }}"
        availability_template: "{{ states.binary_sensor.smartphone_antonella_high_accuracy_mode.state is defined }}"
        turn_on:
          service: notify.mobile_app_smartphone_antonella
          data:
            message: "command_high_accuracy_mode"
            data:
              command: "turn_on"
        turn_off:
          service: notify.mobile_app_smartphone_antonella
          data:
            message: "command_high_accuracy_mode"
            data:
              command: "turn_off"

input_button:
  tel_erica_update_location:
    name: Aggiorna posizione Tel Erica
    icon: mdi:crosshairs-gps

automation:
  # Pressione pulsante aggiornamento posizione telefono Erica
  - id: 5199c02c-f765-4c1f-9ea9-4e319851592a
    alias: Button - Action - Aggiorna posizione telefono Erica
    trigger:
      - platform: state
        entity_id: input_button.tel_erica_update_location
    action:
      - service: notify.mobile_app_iphone_di_erica
        data:
          message: "request_location_update"

  # Chiama l'evento uscita ultimo da casa
  - id: 86680100-fb55-4867-9f24-e8133ccc74e4
    alias: Persone - Evento - Generazione - Uscita ultimo da casa
    description: Chiama l'evento uscita ultimo da casa
    trigger:
      - platform: state
        entity_id: binary_sensor.anyone_at_home
        to: "off"
    action:
      - event: uscita_ultimo_da_casa

  # Chiama l'evento arrivo del primo a casa
  - id: cd3842d0-39d6-45a9-8f0c-6d18852e32fa
    alias: Persone - Evento - Rientro del primo a casa
    description: Chiama l'evento rientro del primo a casa
    trigger:
      - platform: state
        entity_id: binary_sensor.anyone_at_home
        to: "on"
    action:
      - event: arrivo_primo_a_casa

  # Primo che scende le scale della giornata
  - id: 47182d5e-8f95-43f2-9503-fca9dd5fcd3c
    alias: Persone - Evento - Primo che scende le scale della giornata
    description: Chiama l'evento quando il primo scende le scale della giornata (presumibilmente la mattina)
    trigger:
      - platform: state
        entity_id: binary_sensor.motion_soggiorno
        to: "on"
      - platform: state
        entity_id: binary_sensor.motion_cucina
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.primo_sceso_scale_today
        state: "off"
    action:
      - alias: "Imposto flag primo_sceso_scale_today"
        service: input_boolean.turn_on
        target:
          entity_id: input_boolean.primo_sceso_scale_today
      - event: primo_sceso_scale

  # Alle 4 di mattina resetta lo stato di "primo sceso dalle scale oggi", così alla mattina scatta di nuovo scendendo le scale
  - id: d617f7ff-28eb-4255-9926-b8ead30700b7
    alias: "Persone - Logica - Reset flag primo sceso dalle scale oggi"
    trigger:
      - platform: time
        at: "06:20:00"
    action:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.primo_sceso_scale_today

  # Quando rilevo movimento dalla telecamera frontale forzo una rilevazione della posizione GPS delle app di chi non risulta a casa
  # (perchè potrebbe essere lui/lei che sta entrando. Così facendo l'app rileverà la posizione prima di arrivare alla porta di casa)
  - id: 18b09f9d-7d52-4d09-9d8a-42d789ffcc80
    alias: "Persone - Logica - Forzo rilevazione GPS quando movimento da cam front"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_cam_motion
        from: "off"
        to: "on"
    action:
      - alias: "Se Henrik non è a casa forza un rilevamento GPS"
        if: "{{ is_state('binary_sensor.henrik_at_home', 'off') }}"
        then:
          - service: notify.mobile_app_tel_henrik
            data:
              message: "request_location_update"
      - alias: "Se Antonella non è a casa forza un rilevamento GPS"
        if: "{{ is_state('binary_sensor.antonella_at_home', 'off') }}"
        then:
          - service: notify.mobile_app_smartphone_antonella
            data:
              message: "request_location_update"
      - alias: "Se Erica non è a casa forza un rilevamento GPS"
        if: "{{ is_state('binary_sensor.erica_at_home', 'off') }}"
        then:
          - service: notify.mobile_app_iphone_di_erica
            data:
              message: "request_location_update"
